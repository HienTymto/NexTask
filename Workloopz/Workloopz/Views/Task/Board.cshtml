@{
	Layout = "TaskLayout/_TaskLayout";
}

<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1" />
	<title>Kanban Board</title>
	<link href="~/lib/bootstrap/dist/css/bootstrap.css" rel="stylesheet" />
	<link rel="stylesheet" href="~/lib/Jkanban/jkanban.min.css" />
	<link href="~/css/kanban.css" rel="stylesheet" />
	<style>
		body {
			margin: 0;
			padding: 0;
			background-color: #f8f8f8;
		}

		#myKanban {
			overflow-x: auto;
			padding: 20px 0;
		}

		.success {
			background: #00b961;
		}

		.info {
			background: #2a92bf;
		}

		.warning {
			background: #f4ce46;
		}

		.error {
			background: #fb7d44;
		}

		.custom-button {
			background-color: #4CAF50;
			border: none;
			color: white;
			padding: 7px 15px;
			margin: 10px;
			text-align: center;
			text-decoration: none;
			display: inline-block;
			font-size: 16px;
		}

		.form-control:hover {
			background-color: #F5F5F5; /* Thay đổi màu viền */
		}

	</style>
</head>
<body>
	<div id="myKanban"></div>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.0/signalr.min.js"></script>
	<script src="~/lib/Jkanban/jkanban.js"></script>
	<script src="~/js/kanban.js"></script>

	<!-- Modal HTML -->
	<div class="modal fade" id="taskModal" tabindex="-1" aria-labelledby="taskModalLabel" aria-hidden="true">
		<div class="modal-dialog modal-dialog-centered" style="max-width: 75vw;">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="taskTitle"></h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>
				<div class="modal-body ">
					<div class="container-fluid">
						
						<div class="row">
							<div class="col-md-7 ms-auto" id="left-content">
								<form>
									<div class="mb-3">
										<label for="description" class="form-label fw-bold">Mô tả: </label>
										<input type="text" class="form-control border-0" id="description" placeholder="Thêm mô tả...">
									</div>
									<button type="submit" id="submitBtn" class="btn btn-primary" style="display: none;">Lưu</button>
								</form>
								<h2>Activity</h2>

								<!-- Chọn tab Comments -->
								<div class="tabs">
									<button class="tab-button">All</button>
									<button class="tab-button active">Comments</button>
									<button class="tab-button">History</button>
									<button class="tab-button">Work log</button>
								</div>

								<!-- Các bình luận -->
								<div class="comment-section">
									<div id="commentsList">
										<!-- Các comment sẽ được thêm vào đây thông qua SignalR -->
									</div>
								</div>

								<!-- Form để thêm comment mới -->
								<div class="comment-form">
									<textarea id="commentText" placeholder="Add a comment..."></textarea>
									<button id="submitComment" class="submit-btn">Post</button>
								</div>

							</div>

								<div class="col-md-5 ms-auto" id="right-content">
									<strong>Tiêu đề:</strong> <span id="taskTitle"></span>

									<h2>Task Details</h2>

									<div class="task-details">
										<div class="task-info">
											<div class="task-item">
												<strong>Assignee:</strong>
												<span>Unassigned <a href="#">Assign to me</a></span>
											</div>
											<div class="task-item">
												<strong>Reporter:</strong>
												<span>vu van hien</span>
											</div>
											<div class="task-item">
												<strong>Priority:</strong>
												<span>Medium</span>
											</div>
											<div class="task-item">
												<strong>Labels:</strong>
												<span>None</span>
											</div>
											<div class="task-item">
												<strong>Due date:</strong>
												<span>Dec 01, 2024</span>
											</div>
											<div class="task-item">
												<strong>Start date:</strong>
												<span>Nov 16, 2024</span>
											</div>
											<div class="task-item">
												<strong>Category:</strong>
												<span>None</span>
											</div>
											<div class="task-item">
												<strong>Team:</strong>
												<span>None</span>
											</div>
										</div>

										<!-- Time Tracking -->
										<div class="time-tracking">
											<strong>Time tracking:</strong>
											<div class="progress-bar">
												<div class="progress" style="width: 66%;">2w logged</div>
												<div class="remaining-time">1d remaining</div>
											</div>
										</div>
									</div>
								</div>

							</div>
						</div>
					</div>
				</div>
			</div>
		</div>

		
	@* <script type="text/javascript">
		// Kết nối SignalR
		const connection = new signalR.HubConnectionBuilder()
			.withUrl("/chatHub")
			.build();

		// Khi nhận comment mới từ server
		connection.on("ReceiveMessage", (user, message) => {
			const commentHtml = `
					<div class="comment">
						<div class="comment-header">
							<span class="username">${user}</span>
							<span class="time">Just now</span>
						</div>
						<div class="comment-body">
							${message}
						</div>
					</div>
				`;
			document.getElementById("commentsList").innerHTML += commentHtml;
		});

		// Xử lý kết nối SignalR
		connection.start()
			.then(() => {
				console.log("SignalR connected.");
			})
			.catch(err => console.error("SignalR error: ", err));

		// Gửi bình luận mới
		function sendComment() {
			const user = "YourUserName"; // TODO: Lấy tên từ session hoặc backend
			const message = document.getElementById("commentText").value;

			if (message.trim() !== "") {
				connection.invoke("SendMessage", user, message)
					.then(() => {
						document.getElementById("commentText").value = ""; // Xóa nội dung sau khi gửi
					})
					.catch(err => console.error("Error sending message: ", err));
			} else {
				alert("Comment cannot be empty.");
			}
		}

		// Thêm sự kiện click cho nút Post
		document.getElementById("submitComment").addEventListener("click", sendComment);

		// Thêm sự kiện Enter để gửi bình luận
		document.getElementById("commentText").addEventListener("keypress", (event) => {
			if (event.key === "Enter" && !event.shiftKey) {
				event.preventDefault(); // Ngăn xuống dòng
				sendComment();
			}
		});

		// Reset nội dung modal khi mở task mới
		function resetModal() {
			document.getElementById("commentsList").innerHTML = "";
			document.getElementById("commentText").value = "";
		}

		// Gọi hàm reset khi mở modal (tích hợp vào sự kiện mở modal của bạn)
		document.getElementById("taskModal").addEventListener("show.bs.modal", resetModal);
	</script>
 *@
	
</body>

</html>


